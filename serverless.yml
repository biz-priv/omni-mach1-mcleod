service: omni-mach1-mcleod

provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  versionFunctions: false
  tags: ${self:custom.tags}
  stackTags: ${self:custom.tags}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "*"
  runtime: nodejs14.x
  environment:
    SERVICE: ${self:service}
    REGION: ${self:custom.region}
    STAGE: ${self:custom.stage}
  deploymentBucket:
    name: ${ssm:/omni-dw/${self:provider.stage}/sls/deployment/bucket}
    serverSideEncryption: AES256

custom:
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  tags:
    Application: OmniMach1Mcleod
    CreateBy: BizCloudExperts
    Environment: ${self:custom.stage}
  logSubscription:
    enabled: true

package:
  individually: true

layers:
  OmniMach1McleodLayer:
    path: lambdaLayer/lib
    name: ${self:service}-layer-${self:provider.stage}
    description: Omni Mach1-Mcleod lambda layer for all node modules - ${self:provider.stage}
    compatibleRuntimes:
      - nodejs14.x
    retain: false

functions:
  omni_mach_mcleod: ${file(config/functions/mach1McleodLambdaFucntion.yml):function}

resources:
  Resources: 
    Mach1McleodUpdateQueue: ${file(config/sqs/mach1McleodUpdateQueue.yml):Mach1McleodUpdateQueue}
    Mach1McleodUdpateQueuePolicy: ${file(config/sqs/mach1McleodUdpateQueuePolicy.yml):Mach1McleodUdpateQueuePolicy}
    # Mach1McleodS3Bucket: ${file(config/s3/mach1McleodS3Bucket.yml):Mach1McleodS3Bucket}
